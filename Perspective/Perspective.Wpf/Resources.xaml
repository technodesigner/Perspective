<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:p="clr-namespace:Perspective.Wpf">

    <!--Fader-->

    <Style x:Key="FaderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="#00FFFFFF" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FaderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="15.0" />
        <Setter Property="Width" Value="15.0"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">

                    <Ellipse 
                        Name="Ellipse" 
                        Stroke="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, ControlStroke}}"
                        StrokeThickness="1.0" 
                        Fill="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, ControlBrush}}">
                    </Ellipse>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter 
                                TargetName="Ellipse" 
                                Property="Fill" 
                                Value="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, MouseOverControlBrush}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter 
                                TargetName="Ellipse" 
                                Property="Fill" 
                                Value="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, MouseOverControlBrush}}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter 
                                TargetName="Ellipse" 
                                Property="Fill" 
                                Value="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, DraggingControlBrush}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter 
                                TargetName="Ellipse" 
                                Property="Fill" 
                                Value="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, NotEnabledBrush}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalFader" TargetType="{x:Type p:Fader}">
        <Grid>
            <Rectangle 
                x:Name="SelectionMarker" 
                Stroke="SteelBlue" 
                ClipToBounds="True" 
                SnapsToDevicePixels="True"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding p:Fader.MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar 
                    Name="TopTick"
                    SnapsToDevicePixels="True" 
                    Placement="Top"
                    Fill="Black"
                    Height="4"
                    Visibility="Collapsed" />
                <Border 
                    Name="TrackBackground"
                    Margin="0"
                    CornerRadius="2" 
                    Height="4"
                    Grid.Row="1"
                    Background="White"
                    BorderBrush="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, ControlStroke}}"
                    BorderThickness="1.0" />
                <Track Grid.Row="1" Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
                            Style="{StaticResource FaderButtonStyle}"
                            Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource FaderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
                            Style="{StaticResource FaderButtonStyle}"
                            Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar 
                    Name="BottomTick"
                    SnapsToDevicePixels="True" 
                    Grid.Row="2"
                    Fill="Black"
                    Placement="Bottom"
                    Height="4"
                    Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Visible" />
                <Setter TargetName="SelectionMarker" Property="StrokeThickness" Value="1.0" />
            </Trigger>
            <Trigger Property="IsFocused" Value="False">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Hidden" />
                <Setter TargetName="SelectionMarker" Property="StrokeThickness" Value="0.5" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalFader" TargetType="{x:Type p:Fader}">
        <Grid>
            <Rectangle 
                x:Name="SelectionMarker" 
                Stroke="SteelBlue" 
                ClipToBounds="True" 
                SnapsToDevicePixels="True"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding p:Fader.MinWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar 
                    Name="TopTick"
                    SnapsToDevicePixels="True" 
                    Placement="Left"
                    Fill="Black"
                    Width="4"
                    Visibility="Collapsed" />
                <Border 
                    Name="TrackBackground"
                    Margin="0"
                    CornerRadius="2" 
                    Width="4"
                    Grid.Column="1"
                    Background="White" 
                    BorderBrush="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, ControlStroke}}"
                    BorderThickness="1" />
                <Track Grid.Column="1" Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
                            Style="{StaticResource FaderButtonStyle}"
                            Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource FaderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
                            Style="{StaticResource FaderButtonStyle}"
                            Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar 
                    Name="BottomTick"
                    SnapsToDevicePixels="True" 
                    Grid.Column="2"
                    Fill="Black"
                    Placement="Right"
                    Width="4"
                    Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Visible" />
                <Setter TargetName="SelectionMarker" Property="StrokeThickness" Value="1.0" />
            </Trigger>
            <Trigger Property="IsFocused" Value="False">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Hidden" />
                <Setter TargetName="SelectionMarker" Property="StrokeThickness" Value="0.5" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter TargetName="SelectionMarker" Property="Visibility" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FaderStyle" TargetType="{x:Type p:Fader}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalFader}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalFader}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Knob-->

    <Style x:Key="KnobStyle" TargetType="{x:Type p:Knob}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type p:Knob}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Height="30.0" Width="30.0">
                        <Grid>
                            <Rectangle 
                                x:Name="SelectionMarker" 
                                Stroke="SteelBlue" 
                                ClipToBounds="True" 
                                SnapsToDevicePixels="True"/>
                            <FrameworkElement x:Name="angleElement" Tag="{TemplateBinding Angle}"/>
                            <Ellipse 
                                x:Name="Ellipse"
                                ClipToBounds="True" 
                                Stroke="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, ControlStroke}}" 
                                StrokeThickness="1.8" 
                                Fill="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, ControlBrush}}"/>
                            <Line X1="15.0" Y1="30.0" X2="15.0" Y2="20.0" 
                                Stroke="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, ControlStroke}}" 
                                StrokeThickness="2.0">
                                <Line.RenderTransform>
                                    <RotateTransform 
                                        CenterX="15.0" 
                                        CenterY="15.0" 
                                        Angle="{Binding ElementName=angleElement, Path=Tag}"
                                         />
                                </Line.RenderTransform>
                            </Line>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, MouseOverControlBrush}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, MouseOverControlBrush}}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource {ComponentResourceKey {x:Type p:ResourceKeys}, DraggingControlBrush}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="SelectionMarker" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectionMarker" Property="StrokeThickness" Value="1.5" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter TargetName="SelectionMarker" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="SelectionMarker" Property="StrokeThickness" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectionMarker" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="SelectionMarker" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>